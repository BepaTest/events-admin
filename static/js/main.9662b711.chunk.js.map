{"version":3,"sources":["events.js","FIREBASE_CONFIG.js","App.js","registerServiceWorker.js","index.js"],"names":["uuidv4","require","v4","EventTitle","record","name","EventFilter","props","Filter","TextInput","label","source","alwaysOn","EventList","List","filters","Datagrid","TextField","DateField","ShowButton","EditButton","DeleteButton","redirect","undoable","EventShow","Show","title","SimpleShowLayout","ReferenceField","reference","multiline","RichTextField","ImageField","EventCreate","Create","SimpleForm","disabled","defaultValue","validate","required","ReferenceInput","SelectInput","optionText","DateInput","toolbar","ImageInput","accept","placeholder","EventEdit","Edit","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","options","logging","app","firebase","initializeApp","dataProvider","FirebaseDataProvider","authProvider","FirebaseAuthProvider","i18nProvider","polyglotI18nProvider","frenchMessages","MyLoginPage","Login","backgroundImage","App","Admin","loginPage","Resource","list","show","create","edit","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9662b711.chunk.js","sourcesContent":["// in src/posts.js\nimport * as React from 'react'\n// tslint:disable-next-line:no-var-requires\nimport {\n  Datagrid,\n  List,\n  Show,\n  Create,\n  Edit,\n  Filter,\n  SimpleShowLayout,\n  SimpleForm,\n  ReferenceInput,\n  TextField,\n  TextInput,\n  ShowButton,\n  EditButton,\n  DeleteButton,\n  RichTextField,\n  SelectInput,\n  DateInput,\n  ReferenceField,\n  ImageInput,\n  ImageField,\n  DateField,\n  required,\n} from 'react-admin'\nimport RichTextInput from 'ra-input-rich-text'\n\nconst { v4: uuidv4 } = require('uuid')\n\nconst EventTitle = ({ record }) => {\n  return <span>Evénement {record ? `\"${record.name}\"` : ''}</span>\n}\n\nconst EventFilter = (props) => (\n  <Filter {...props}>\n    <TextInput label='Search' source='name' alwaysOn />\n  </Filter>\n)\n\nexport const EventList = (props) => (\n  <List {...props} filters={<EventFilter />}>\n    <Datagrid>\n      <TextField source='name' label=\"Nom d'événement\" />\n      <TextField source='category' />\n      <DateField source='eventDate' label=\"Date d'événement\" />\n      <TextField source='startTime' label='Heure de debut' />\n      <TextField source='endTime' label='Heure de fin' />\n      <ShowButton label='' />\n      <EditButton label='' />\n      <DeleteButton label='' redirect={false} undoable={false} />\n    </Datagrid>\n  </List>\n)\n\nexport const EventShow = (props) => (\n  <Show title={<EventTitle />} {...props}>\n    <SimpleShowLayout>\n      <TextField source='name' label=\"Nom d'événement\" />\n      <ReferenceField\n        source='category'\n        reference='categories'\n        label='Catégorie'\n      >\n        <TextField source='name' />\n      </ReferenceField>\n      <TextField source='eventDate' label=\"Date d'événement\" />\n      <TextField source='startTime' label='Heure de debut (HH:MM)' />\n      <TextField source='endTime' label='Heure de fin (HH:MM)' />\n      <TextField source='lastupdate' label='Dernier changement' />\n      <TextField multiline source='description' label='Description' />\n      <RichTextField source='link' label='Lien associé' />\n      <TextField source='price' label='Prix' />\n      <ImageField\n        source='image.src'\n        label=\"Image d'événement\"\n        title=\"Image d'événement\"\n      />\n      <TextField source='address.street' label=\"Adresse d'événemet\" />\n      <TextField source='address.postCode' label='Adresse - code postal' />\n      <TextField source='address.city' label='Adresse - nom de la ville' />\n      <TextField source='contact.name' label='Contact - Prenom' />\n      <TextField source='contact.surname' label='Contact - Nom' />\n      <TextField source='contact.phone' label='Contact - Numero de téléphone' />\n    </SimpleShowLayout>\n  </Show>\n)\n\nexport const EventCreate = (props) => (\n  <Create title=\"Création d'événement\" {...props}>\n    <SimpleForm redirect='list'>\n      <TextInput disabled source='id' defaultValue={() => uuidv4()} />\n      <TextInput source='name' label=\"Nom d'événement\" validate={required()} />\n      <ReferenceInput\n        source='category'\n        reference='categories'\n        label='Catégorie'\n      >\n        <SelectInput optionText='name' />\n      </ReferenceInput>\n      <DateInput\n        source='eventDate'\n        label=\"Date d'événement\"\n        validate={required()}\n      />\n      <TextInput\n        source='startTime'\n        label='Heure de debut (HH:MM)'\n        validate={required()}\n      />\n      <TextInput\n        source='endTime'\n        label='Heure de fin (HH:MM)'\n        validate={required()}\n      />\n      <TextInput source='description' label='Description' />\n      <RichTextInput\n        source='link'\n        label='Lien associé'\n        toolbar={[['bold', 'italic', 'underline', 'link']]}\n      />\n      <TextInput source='price' label='Prix' validate={required()} />\n      <ImageInput\n        source='image'\n        label='Photo'\n        accept='image/*'\n        validate={required()}\n        placeholder={<p>Déposez votre photo ici</p>}\n      >\n        <ImageField source='src' title='title' />\n      </ImageInput>\n      <TextInput source='address.street' label=\"Adresse d'événemet\" />\n      <TextInput source='address.postCode' label='Adresse  - code postal' />\n      <TextInput\n        source='address.city'\n        label='Adresse - nom de la ville'\n        validate={required()}\n      />\n      <TextInput source='contact.name' label='Contact - Prenom' />\n      <TextInput source='contact.surname' label='Contact - Nom' />\n      <TextInput source='contact.phone' label='Contact - Numero de téléphone' />\n    </SimpleForm>\n  </Create>\n)\n\nexport const EventEdit = (props) => (\n  <Edit title={<EventTitle />} {...props}>\n    <SimpleForm>\n      <TextInput disabled source='id' defaultValue={() => uuidv4()} />\n      <TextInput source='name' label=\"Nom d'événement\" validate={required()} />\n      <ReferenceInput\n        source='category'\n        reference='categories'\n        label='Catégorie'\n      >\n        <SelectInput optionText='name' />\n      </ReferenceInput>\n      <DateInput\n        source='eventDate'\n        label=\"Date d'événement\"\n        validate={required()}\n      />\n      <TextInput\n        source='startTime'\n        label='Heure de debut (HH:MM)'\n        validate={required()}\n      />\n      <TextInput\n        source='endTime'\n        label='Heure de fin (HH:MM)'\n        validate={required()}\n      />\n      <TextInput source='description' label='Description' />\n      <RichTextInput\n        source='link'\n        label='Lien associé'\n        toolbar={[['bold', 'italic', 'underline', 'link']]}\n      />\n      <TextInput source='price' label='Prix' validate={required()} />\n      <ImageInput\n        source='image'\n        label='Photo'\n        accept='image/*'\n        validate={required()}\n        placeholder={<p>Déposez votre photo ici</p>}\n      >\n        <ImageField source='src' title='title' />\n      </ImageInput>\n      <TextInput source='address.street' label=\"Adresse d'événemet\" />\n      <TextInput source='address.postCode' label='Adresse - code postal' />\n      <TextInput\n        source='address.city'\n        label='Adresse - nom de la ville'\n        validate={required()}\n      />\n      <TextInput source='contact.name' label='Contact - Prenom' />\n      <TextInput source='contact.surname' label='Contact - Nom' />\n      <TextInput source='contact.phone' label='Contact - Numero de téléphone' />\n    </SimpleForm>\n  </Edit>\n)\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyAQM6ktPaKMmwMsheXguHdTURKg4nzwWeU\",\n  authDomain: \"communeevents-581a9.firebaseapp.com\",\n  databaseURL: \"https://communeevents-581a9.firebaseio.com\",\n  projectId: \"communeevents-581a9\",\n  storageBucket: \"communeevents-581a9.appspot.com\",\n  messagingSenderId: \"679013840468\",\n};\n","import * as React from 'react'\nimport { EventList, EventShow, EventCreate, EventEdit } from './events'\nimport { Admin, Resource, Login } from 'react-admin'\nimport {\n  FirebaseRealTimeSaga,\n  FirebaseDataProvider,\n  FirebaseAuthProvider,\n} from 'react-admin-firebase'\nimport firebase from 'firebase'\nimport frenchMessages from 'ra-language-french'\nimport polyglotI18nProvider from 'ra-i18n-polyglot'\nimport { firebaseConfig } from './FIREBASE_CONFIG'\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\n\nconst options = {\n  logging: true,\n  app: firebaseApp,\n  // rootRef: 'root_collection/some_document',\n}\n\nconst dataProvider = FirebaseDataProvider(firebaseConfig, options)\nconst authProvider = FirebaseAuthProvider(firebaseConfig, options)\n//const firebaseRealtime = FirebaseRealTimeSaga(dataProvider, options)\n\nconst i18nProvider = polyglotI18nProvider(() => frenchMessages, 'fr')\n\nconst MyLoginPage = () => (\n  <Login\n    // Condrieu Picture\n    backgroundImage='https://www.parlezmoidimmo.fr/public/files/images/ou-vivre-dans-le-rhone.jpg'\n  />\n)\n\nconst App = () => (\n  <Admin\n    loginPage={MyLoginPage}\n    //customSagas={[firebaseRealtime]}\n    dataProvider={dataProvider}\n    authProvider={authProvider}\n    i18nProvider={i18nProvider}\n  >\n    <Resource name='categories' />\n    <Resource\n      name='evenements'\n      list={EventList}\n      show={EventShow}\n      create={EventCreate}\n      edit={EventEdit}\n    />\n  </Admin>\n)\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}